{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotView.vue","mtime":1619057276520},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RobotView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,QAAA,MAAA,qCAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,QAAA,MAAA,sCAAA,C,CACA;;AACA,OAAA,QAAA,MAAA,sCAAA;AACA,OAAA,KAAA,MAAA,kCAAA;AACA,SAAA,WAAA,QAAA,OAAA;AACA,SAAA,wBAAA,EAAA,6BAAA,QAAA,aAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,gBAAA,EAAA,IAHA;AAIA,MAAA,YAAA,EAAA,IAJA;AAKA,MAAA,aAAA,EAAA,IALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,WAAA,CAAA,CADA,CAZA;AAgBA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA,IAAA,QAAA,EAAA,QAJA;AAKA,IAAA,QAAA,EAAA,QALA;AAMA,IAAA,KAAA,EAAA,KANA,CAOA;;AAPA,GAhBA;AAyBA,EAAA,OAzBA,qBAyBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,QAAA,EADA;;AAAA;AAAA;AAAA,qBAEA,KAAA,CAAA,mBAAA,EAFA;;AAAA;AAGA,cAAA,KAAA,CAAA,aAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,GA7BA;AA8BA,EAAA,aA9BA,2BA8BA;AACA,QAAA,KAAA,EAAA,EAAA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,OADA;AAEA,QAAA,MAAA,EAAA,iBAAA,KAAA,OAAA,2BAAA,KAAA,OAAA;AAFA,OAAA;;AAIA,UAAA,EAAA,GAAA,KAAA,EAAA;AACA,WAAA,EAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,KAAA;AACA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA;AACA,UAAA,KAAA,aAAA,MAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAFA,CAEA;;AACA,WAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,CAAA;;AACA,WAAA,EAAA,CAAA,SAAA,GAAA,UAAA,OAAA,EAAA;AACA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,YAAA,OAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,YAAA,IAAA,EAAA,OAAA,CAAA;AADA,WAAA;;AAGA;AACA;;AAEA,YAAA,OAAA,CAAA,IAAA,EAAA;AACA,cAAA,OAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA;AACA,cAAA,GAAA,EAAA,KADA;AAEA,cAAA,MAAA,EAAA,iBAAA,MAAA,CAAA,OAAA,2BAAA,MAAA,CAAA,OAAA;AAFA,aAAA;;AAIA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,SAAA,EAAA,IAAA,CAAA,GAAA,EADA;AAEA,cAAA,KAAA,EAAA,SAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;AAKA,WAVA,MAUA,IAAA,OAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,SAAA,EAAA,IAAA,CAAA,GAAA,EADA;AAEA,cAAA,KAAA,EAAA,OAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;AAKA;AACA,SAlBA,MAkBA,IAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,QAAA,KAAA,oBAAA,EAAA;AACA,UAAA,MAAA,CAAA,aAAA,GAAA,OAAA,CAAA,IAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,QAAA,KAAA,iBAAA,EAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,OAAA,CAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OApCA;;AAqCA,WAAA,EAAA,CAAA,MAAA,GAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,SAAA,EAAA,IAAA,CAAA,GAAA,EADA;AAEA,UAAA,KAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAKA,QAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,GAAA,EAAA,MADA;AAEA,UAAA,UAAA,EAAA,MAAA,CAAA;AAFA,SAAA;AAIA,OAVA;;AAWA,WAAA,EAAA,CAAA,OAAA,GAAA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,KAAA;AACA,OAFA;;AAGA,WAAA,EAAA,CAAA,OAAA,GAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,SAAA,EAAA,IAAA,CAAA,GAAA,EADA;AAEA,UAAA,KAAA,EAAA,OAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAKA,YAAA,MAAA,CAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA;AACA;AACA,OATA;AAUA,KAlEA;AAmEA,IAAA,SAnEA,uBAmEA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,SAAA,EAAA,IAAA,CAAA,GAAA,EADA;AAEA,UAAA,KAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAKA,QAAA,MAAA,CAAA,aAAA;AACA,OAPA,EAOA,IAPA,CAAA;AAQA,KA5EA;AA8EA,IAAA,KA9EA,iBA8EA,OA9EA,EA8EA;AACA,WAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AACA,KAhFA;AAiFA,IAAA,QAjFA,oBAiFA,EAjFA,EAiFA,KAjFA,EAiFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,cAAA;AACA,gBAAA,IAFA,GAEA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAFA;AAAA;AAAA;AAAA,uBAIA,6BAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAJA;;AAAA;AAAA;AAAA,uBAKA,MAAA,CAAA,mBAAA,EALA;;AAAA;AAMA,gBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,kBAAA;;AANA;AAAA;;AAAA;AAAA;AAAA;;AAQA,oBAAA,aAAA,QAAA,EAAA;AACA,sBAAA,aAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,2CAAA,aAAA,QAAA,CAAA,MAAA,GAAA;AACA,sBAAA,KAAA,EAAA,MADA;AAEA,sBAAA,aAAA,EAAA,IAFA;AAGA,sBAAA,OAAA,EAAA,sBAHA;AAIA,sBAAA,OAAA,EAAA,QAJA;AAKA,sBAAA,WAAA,EAAA;AALA,qBAAA;AAOA,mBARA,MAQA,IAAA,aAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA,CACA;AACA;AACA,mBAHA,MAGA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,OAAA,EAAA;AACA,sBAAA,KAAA,EAAA,QADA;AAEA,sBAAA,aAAA,EAAA,IAFA;AAGA,sBAAA,OAAA,EAAA,sBAHA;AAIA,sBAAA,OAAA,EAAA,QAJA;AAKA,sBAAA,WAAA,EAAA;AALA,qBAAA;AAOA;AACA,iBArBA,MAqBA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,OAAA,EAAA;AACA,oBAAA,KAAA,EAAA,QADA;AAEA,oBAAA,aAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,sBAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,WAAA,EAAA;AALA,mBAAA;AAOA;;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA,KAxHA;AAyHA,IAAA,QAzHA,sBAyHA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,WAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAGA,gBAAA,MAHA,GAGA,QAAA,CAAA,IAHA;AAIA,gBAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,gBAAA,CAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,aAAA,CAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA;AACA,kBAAA,IAAA,EAAA,MAAA,CAAA,IADA;AAEA,kBAAA,IAAA,EAAA,MAAA,CAAA,IAFA;AAGA,kBAAA,UAAA,EAAA,MAAA,CAAA,aAAA,CAHA;AAIA,kBAAA,OAAA,EAAA,MAAA,CAAA,OAJA;AAKA,kBAAA,YAAA,EAAA,MAAA,CAAA,eAAA,CALA;AAMA,kBAAA,cAAA,EAAA,MAAA,CAAA,iBAAA,CANA;AAOA,kBAAA,YAAA,EAAA,MAAA,CAAA,eAAA,CAPA;AAQA,kBAAA,aAAA,EAAA,MAAA,CAAA,gBAAA,CARA;AASA,kBAAA,eAAA,EAAA,MAAA,CAAA,kBAAA,CATA;AAUA,kBAAA,iBAAA,EAAA,MAAA,CAAA,qBAAA,CAVA;AAWA,kBAAA,YAAA,EAAA,MAAA,CAAA,QAAA,CAAA,IAXA;AAYA,kBAAA,OAAA,EAAA,MAAA,CAAA,UAAA,CAZA;AAaA,kBAAA,OAAA,EAAA,MAAA,CAAA,OAbA;AAcA,kBAAA,cAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,iBAAA,CAdA;AAeA,kBAAA,YAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,eAAA,CAfA;AAgBA,kBAAA,WAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,eAAA,CAhBA;AAiBA,kBAAA,cAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,mBAAA,CAjBA;AAkBA,kBAAA,cAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,mBAAA,CAlBA;AAmBA,kBAAA,iBAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA,uBAAA;AAnBA,iBAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;;AA6BA,oBAAA,aAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,EAAA;AACA,oBAAA,KAAA,EAAA,WADA;AAEA,oBAAA,aAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,qBAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,WAAA,EAAA;AALA,mBAAA;AAOA,iBARA,MAQA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,OAAA,EAAA;AACA,oBAAA,KAAA,EAAA,WADA;AAEA,oBAAA,aAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,qBAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,WAAA,EAAA;AALA,mBAAA;AAOA;;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CA,KAxKA;AAyKA,IAAA,mBAzKA,iCAyKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,wBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAGA,gBAAA,MAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,IAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;;AAKA,oBAAA,aAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,UAAA,EAAA;AACA,oBAAA,KAAA,EAAA,UADA;AAEA,oBAAA,aAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,sBAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,WAAA,EAAA;AALA,mBAAA;AAOA,iBARA,MAQA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,OAAA,EAAA;AACA,oBAAA,KAAA,EAAA,UADA;AAEA,oBAAA,aAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,sBAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,WAAA,EAAA;AALA,mBAAA;AAOA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAhMA;AAzCA,CAAA","sourcesContent":["<template>\n    <b-row class=\"m-1\">\n        <b-col md=\"8\">\n            <log-panel :logList=\"logList\" />\n            <b-card no-body class=\"mt-3\">\n                <b-tabs card>\n                    <b-tab title=\"持有仓位\" active>\n                        <position :position-store=\"positionStore\"></position>\n                    </b-tab>\n                    <b-tab title=\"当前委托\">\n                        <order :order-store=\"orderStore\"></order>\n                    </b-tab>\n                </b-tabs>\n            </b-card>\n            <!--      <asset-chart/>-->\n        </b-col>\n        <b-col md=\"4\">\n            <overview :overview-data=\"overviewData\" />\n            <b-card header-tag=\"header\" class=\"mt-3\">\n                <template v-slot:header>\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                        <span class=\"h6\">参数预览</span>\n                        <a href=\"#\" v-b-modal.param-form-modal>\n                            <b-icon-pencil-square></b-icon-pencil-square>\n                        </a>\n                    </div>\n                </template>\n                <param-preview :parameters=\"strategySpecView && strategySpecView.parameters\"></param-preview>\n            </b-card>\n        </b-col>\n        <b-modal button-size=\"sm\" size=\"md\" id=\"param-form-modal\" scrollable centered title=\"参数设置\">\n            <param-form ref=\"paramForm\" :fields=\"strategySpecView && strategySpecView.parameters\"></param-form>\n            <template v-slot:modal-footer=\"{ ok }\">\n                <b-button size=\"sm\" variant=\"primary\" @click=\"onSubmit(ok, $event)\">确认</b-button>\n            </template>\n        </b-modal>\n    </b-row>\n</template>\n\n<script>\nimport LogPanel from '@/components/robot-console/LogPanel';\nimport ParamPreview from '../components/ParamPreview';\nimport ParamForm from '../components/ParamForm';\nimport Position from '../components/robot-console/Position';\n// import AssetChart from '../components/robot-console/AssetChart';\nimport Overview from '../components/robot-console/Overview';\nimport Order from '@/components/robot-console/Order';\nimport { getRobotsId } from '@/api';\nimport { getRobotStrategySpecView, updateRobotStrategyParameters } from '@/api/robot';\nimport { mapState } from 'vuex';\n\nexport default {\n    name: 'RobotView',\n    data() {\n        return {\n            logList: [],\n            robotId: null,\n            strategySpecView: null,\n            overviewData: null,\n            positionStore: null,\n            orderStore: null,\n        };\n    },\n    computed: {\n        ...mapState(['authToken']),\n    },\n\n    components: {\n        LogPanel,\n        ParamPreview,\n        ParamForm,\n        Overview,\n        Position,\n        Order,\n        // AssetChart,\n    },\n    async mounted() {\n        await this.getRobot();\n        await this.getStrategySpecView();\n        this.initWebsocket();\n    },\n    beforeDestroy() {\n        if (this.ws) {\n            this._send({\n                cmd: 'unsub',\n                topics: [`robot#${this.robotId}.log`, `robot#${this.robotId}.store`],\n            });\n            const ws = this.ws;\n            this.ws = null;\n            ws.close();\n        }\n    },\n    methods: {\n        initWebsocket() {\n            // 初始化weosocket\n            const wsuri = `${window.conf.websocketApiUri}`; // 这个地址由后端童鞋提供\n            this.ws = new WebSocket(wsuri);\n            this.ws.onmessage = message => {\n                message = JSON.parse(message.data);\n                if (message.ping) {\n                    this._send({\n                        pong: message.ping,\n                    });\n                    return;\n                }\n\n                if (message.code) {\n                    if (message.code === 200) {\n                        this._send({\n                            cmd: 'sub',\n                            topics: [`robot#${this.robotId}.log`, `robot#${this.robotId}.store`],\n                        });\n                        this.logList.push({\n                            timestamp: Date.now(),\n                            level: 'success',\n                            text: '认证成功, 订阅中...',\n                        });\n                    } else if (message.code === 400) {\n                        this.logList.push({\n                            timestamp: Date.now(),\n                            level: 'error',\n                            text: '认证失败',\n                        });\n                    }\n                } else if (message.category === 'robotLog') {\n                    this.logList.push(message.data);\n                } else if (message.category === 'robotPositionStore') {\n                    this.positionStore = message.data;\n                } else if (message.category === 'robotOrderStore') {\n                    this.orderStore = message.data;\n                } else {\n                    console.log(message);\n                }\n            };\n            this.ws.onopen = () => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'INFO',\n                    text: '已建立 websocket 连接, token 认证中...',\n                });\n                this._send({\n                    cmd: 'auth',\n                    auth_token: this.authToken,\n                });\n            };\n            this.ws.onerror = event => {\n                console.log('error event:', event);\n            };\n            this.ws.onclose = () => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'ERROR',\n                    text: 'Websocket 连接已断开！',\n                });\n                if (this.ws) {\n                    this.reconnect();\n                }\n            };\n        },\n        reconnect() {\n            setTimeout(() => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'INFO',\n                    text: '正在尝试重新建立 WebSocket 连接...',\n                });\n                this.initWebsocket();\n            }, 5000);\n        },\n\n        _send(message) {\n            this.ws.send(JSON.stringify(message));\n        },\n        async onSubmit(ok, event) {\n            event.preventDefault();\n            let data = this.$refs.paramForm.form;\n            try {\n                await updateRobotStrategyParameters(this.$route.params.id, data);\n                await this.getStrategySpecView();\n                this.$bvModal.hide('param-form-modal');\n            } catch (error) {\n                if (error.response) {\n                    if (error.response.status === 500) {\n                        this.$bvToast.toast(`服务端错误: ${error.response.status}`, {\n                            title: '更新失败',\n                            autoHideDelay: 3000,\n                            toaster: 'b-toaster-top-center',\n                            variant: 'danger',\n                            appendToast: false,\n                        });\n                    } else if (error.response.status === 400) {\n                        // this.paramFormErrors = error.response.data.errors;\n                        // todo\n                    } else {\n                        this.$bvToast.toast(error.message, {\n                            title: '数据获取失败',\n                            autoHideDelay: 3000,\n                            toaster: 'b-toaster-top-center',\n                            variant: 'danger',\n                            appendToast: false,\n                        });\n                    }\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '数据获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n        async getRobot() {\n            try {\n                const robotRes = await getRobotsId(this.$route.params.id);\n                const result = robotRes.data;\n                this.robotId = result.id;\n                this.positionStore = result['position_store'];\n                this.orderStore = result['order_store'];\n                this.overviewData = {\n                    name: result.name,\n                    pair: result.pair,\n                    marketType: result['market_type'],\n                    RobotId: this.robotId,\n                    strategyName: result['strategy_name'],\n                    targetCurrency: result['target_currency'],\n                    baseCurrency: result['base_currency'],\n                    quoteCurrency: result['quote_currency'],\n                    durationDisplay: result['duration_display'],\n                    marketTypeDisplay: result['market_type_display'],\n                    exchangeName: result.exchange.name,\n                    testNet: result['test_net'],\n                    enabled: result.enabled,\n                    totalPrincipal: result['asset_record']['total_principal'],\n                    totalBalance: result['asset_record']['total_balance'],\n                    totalPnlAbs: result['asset_record']['total_pnl_abs'],\n                    totalPnlAbs24h: result['asset_record']['total_pnl_abs_24h'],\n                    totalPnlRelPtg: result['asset_record']['total_pnl_rel_ptg'],\n                    totalPnlRelPtg24h: result['asset_record']['total_pnl_rel_ptg_24h'],\n                };\n            } catch (error) {\n                if (error.response) {\n                    this.$bvToast.toast('获取机器人数据失败', {\n                        title: '获取机器人数据失败',\n                        autoHideDelay: 2000,\n                        toaster: 'b-toaster-top-right',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '获取机器人数据失败',\n                        autoHideDelay: 2000,\n                        toaster: 'b-toaster-top-right',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n        async getStrategySpecView() {\n            try {\n                const response = await getRobotStrategySpecView(this.$route.params.id);\n                this.strategySpecView = response.data;\n            } catch (error) {\n                if (error.response) {\n                    this.$bvToast.toast('策略视图获取失败', {\n                        title: '策略视图获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '策略视图获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n    },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/views"}]}