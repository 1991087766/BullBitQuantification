{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/components/CredentialForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/components/CredentialForm.vue","mtime":1619057276516},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CredentialForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-form @submit=\"onSubmit\" class=\"form-row\">\n    <!--  Exchanges  -->\n    <b-col md=\"4\">\n      <b-form-group label=\"交易所:\" label-for=\"id_exchange\">\n        <b-form-select\n            id=\"id_exchange\"\n            v-model=\"form.exchange\"\n            :options=\"exchangeOptions\"\n            required\n            :disabled=\"disableExchange\"\n            :state=\"formErrors.exchange===undefined?null:false\"\n        ></b-form-select>\n        <b-form-invalid-feedback :state=\"formErrors.exchange===undefined?null:false\">\n          {{ formErrors.exchange !== undefined && formErrors.exchange[0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  Note  -->\n    <b-col md=\"4\">\n      <b-form-group\n          label=\"备注:\"\n          label-for=\"id_note\"\n      >\n        <b-form-input\n            id=\"id_note\"\n            v-model=\"form.note\"\n            type=\"text\"\n            required\n            :state=\"formErrors.note===undefined?null:false\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"formErrors.note===undefined?null:false\">\n          {{ formErrors.note !== undefined && formErrors.note[0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  API Key  -->\n    <b-col md=\"4\">\n      <b-form-group label=\"API Key:\" label-for=\"id_api_key\">\n        <b-form-input\n            id=\"id_api_key\"\n            v-model=\"form.apiKey\"\n            required\n            autocomplete=\"new-password\"\n            :state=\"formErrors['api_key']===undefined?null:false\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"formErrors['api_key']===undefined?null:false\">\n          {{ formErrors['api_key'] !== undefined && formErrors['api_key'][0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  Secret  -->\n    <b-col md=\"6\">\n      <b-form-group label=\"Secret:\" label-for=\"id_secret\">\n        <b-form-input\n            id=\"id_secret\"\n            v-model=\"form.secret\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n        ></b-form-input>\n      </b-form-group>\n    </b-col>\n\n    <!--  Passphrase  -->\n    <b-col md=\"6\">\n      <b-form-group label=\"Passphrase:\" label-for=\"id_passphrase\">\n        <b-form-input\n            id=\"id_passphrase\"\n            v-model=\"form.passphrase\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n        ></b-form-input>\n      </b-form-group>\n    </b-col>\n\n    <!--  Test net  -->\n    <b-col md=\"12\">\n      <b-form-checkbox\n          id=\"id_test_net\"\n          v-model=\"form.testNet\"\n          name=\"test_net\"\n          value=\"true\"\n          unchecked-value=\"false\"\n      >\n        测试网\n      </b-form-checkbox>\n    </b-col>\n    <b-col class=\"text-center mt-3\">\n      <b-button type=\"submit\" variant=\"primary\" class=\"mr-3\">{{ editing ? \"更新\" : \"绑定\" }}</b-button>\n      <b-button type=\"button\" variant=\"danger\" @click=\"reset\">清空</b-button>\n    </b-col>\n  </b-form>\n</template>\n\n<script>\n\nimport {createCredential, updateCredential} from \"@/api/credential\";\n\nexport default {\n  name: \"CredentialForm\",\n  props: {\n    formInitial: {\n      type: Object,\n      default: null\n    },\n    exchangeOptions: {\n      type: Array,\n      default: () => []\n    },\n  },\n  data() {\n    return {\n      form: {\n        credentialId: null,\n        note: '',\n        apiKey: '',\n        secret: '',\n        passphrase: '',\n        exchange: null,\n        testNet: false,\n      },\n      formErrors: {},\n      disableExchange: false,\n      editing: false,\n    }\n  },\n  watch: {\n    formInitial: function (val) {\n      if (val !== null) {\n        this.reset()\n        this.form = Object.assign({}, this.form, this.formInitial)\n        this.disableExchange = true\n        this.editing = true\n      }\n    }\n  },\n  methods: {\n    reset() {\n      this.form = {\n        credentialId: null,\n        note: '',\n        apiKey: '',\n        secret: '',\n        passphrase: '',\n        exchange: null,\n        testNet: false,\n      }\n      this.editing = false\n      this.disableExchange = false\n      this.formErrors = {}\n    },\n    async onSubmit(event) {\n      event.preventDefault()\n      if (this.form.credentialId === null) {\n        await this.create()\n      } else {\n        await this.update()\n      }\n    },\n    async create() {\n      let data = {\n        \"note\": this.form.note,\n        \"api_key\": this.form.apiKey,\n        \"secret\": this.form.secret,\n        \"passphrase\": this.form.passphrase,\n        \"exchange\": this.form.exchange,\n        \"test_net\": this.form.testNet,\n      }\n      try {\n        await createCredential(data)\n        this.$bvToast.toast('交易所凭据绑定成功', {\n          title: '交易所凭据绑定成功',\n          autoHideDelay: 2000,\n          toaster: 'b-toaster-top-right',\n          variant: 'success',\n          appendToast: false\n        });\n        this.reset()\n        this.$emit(\"submitted\")\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            // form validation error\n            this.formErrors = error.response.data\n            return\n          }\n          // other errors\n          this.$bvToast.toast('交易所凭据绑定失败', {\n            title: '交易所凭据绑定失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '交易所凭据绑定失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async update() {\n      let data = {\n        \"note\": this.form.note,\n        \"api_key\": this.form.apiKey,\n        \"secret\": this.form.secret,\n        \"passphrase\": this.form.passphrase,\n        \"exchange\": this.form.exchange,\n        \"test_net\": this.form.testNet,\n      }\n      try {\n        await updateCredential(this.form.credentialId, data)\n        this.$bvToast.toast('交易所凭据更新成功', {\n          title: '交易所凭据更新成功',\n          autoHideDelay: 2000,\n          toaster: 'b-toaster-top-right',\n          variant: 'success',\n          appendToast: false\n        });\n        this.editing = false\n        this.disableExchange = false\n        this.reset()\n        this.$emit(\"submitted\")\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            // form validation error\n            this.formErrors = error.response.data\n            return\n          }\n          this.$bvToast.toast('交易所凭据更新失败', {\n            title: '交易所凭据更新失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '交易所凭据更新失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n  },\n}\n</script>"],"sourceRoot":"src/components"}]}