{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/components/RobotListItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/components/RobotListItem.vue","mtime":1619057276517},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXZ5eHUvUHljaGFybVByb2plY3RzL294L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xMy4xN0BAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCB7IGRlbGV0ZVJvYm90c0lkIH0gZnJvbSAnLi4vYXBpJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSb2JvdExpc3RJdGVtJywKICBwcm9wczogewogICAgcm9ib3Q6IE9iamVjdAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJvYm90U3RhdHVzQ2xhc3M6IGZ1bmN0aW9uIHJvYm90U3RhdHVzQ2xhc3MoKSB7CiAgICAgIHJldHVybiBtb21lbnQoKS5kaWZmKHRoaXMucm9ib3QucGluZ1RpbWUsICdzZWNvbmRzJykgPCA2MCA/ICd0ZXh0LXN1Y2Nlc3MnIDogJ3RleHQtZGFuZ2VyJzsKICAgIH0sCiAgICByb2JvdFN0YXR1c0FuaW1hdGlvbjogZnVuY3Rpb24gcm9ib3RTdGF0dXNBbmltYXRpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLnJvYm90U3RhdHVzQ2xhc3MgPT09ICd0ZXh0LWRhbmdlcicgPyAnJyA6ICd0aHJvYic7CiAgICB9LAogICAgcHJvZml0Q29sb3JDbGFzczogZnVuY3Rpb24gcHJvZml0Q29sb3JDbGFzcygpIHsKICAgICAgcmV0dXJuIHRoaXMucm9ib3QucHJvZml0ID4gMCA/ICd0ZXh0LXN1Y2Nlc3MnIDogdGhpcy5yb2JvdC5wcm9maXQgPCAwID8gJ3RleHQtZGFuZ2VyJyA6ICcnOwogICAgfSwKICAgIHByb2ZpdDI0aENvbG9yQ2xhc3M6IGZ1bmN0aW9uIHByb2ZpdDI0aENvbG9yQ2xhc3MoKSB7CiAgICAgIHJldHVybiB0aGlzLnJvYm90LnByb2ZpdDI0aCA+IDAgPyAndGV4dC1zdWNjZXNzJyA6IHRoaXMucm9ib3QucHJvZml0MjRoIDwgMCA/ICd0ZXh0LWRhbmdlcicgOiAnJzsKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIHJvdW5kQnlDdXJyZW5jeTogZnVuY3Rpb24gcm91bmRCeUN1cnJlbmN5KHZhbHVlLCBjdXJyZW5jeSkgewogICAgICBzd2l0Y2ggKGN1cnJlbmN5KSB7CiAgICAgICAgY2FzZSAnQlRDJzoKICAgICAgICAgIHJldHVybiB2YWx1ZS50b0ZpeGVkKDQpOwoKICAgICAgICBjYXNlICdVU0RUJzoKICAgICAgICAgIHJldHVybiB2YWx1ZS50b0ZpeGVkKDIpOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93TXNnQm94OiBmdW5jdGlvbiBzaG93TXNnQm94KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29uZmlybTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYnZNb2RhbC5tc2dCb3hDb25maXJtKCfliKDpmaTmnLrlmajkurrlsIblkIzml7bliKDpmaTlhbbmiYDmnInotYTkuqfnu5/orqHmlbDmja7jgIInLCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn56Gu6K6k5Yig6Zmk77yfJywKICAgICAgICAgICAgICAgICAgc2l6ZTogJ3NtJywKICAgICAgICAgICAgICAgICAgYnV0dG9uU2l6ZTogJ3NtJywKICAgICAgICAgICAgICAgICAgb2tWYXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgICAgICAgb2tUaXRsZTogJ+ehruiupCcsCiAgICAgICAgICAgICAgICAgIGNhbmNlbFRpdGxlOiAn5Y+W5raIJywKICAgICAgICAgICAgICAgICAgZm9vdGVyQ2xhc3M6ICdwLTInLAogICAgICAgICAgICAgICAgICBoaWRlSGVhZGVyQ2xvc2U6IGZhbHNlLAogICAgICAgICAgICAgICAgICBjZW50ZXJlZDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNvbmZpcm0gPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChjb25maXJtKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBkZWxldGVSb2JvdHNJZChfdGhpcy5yb2JvdC5yb2JvdElkKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ3JlZnJlc2gnKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNSk7CgogICAgICAgICAgICAgICAgX3RoaXMuJGJ2VG9hc3QudG9hc3QoIlx1NjVFMFx1NkNENVx1NTIyMFx1OTY2NFx1NjczQVx1NTY2OFx1NEVCQVx1NjU3MFx1NjM2RVx1RkYwQ1x1OTUxOVx1OEJFRlx1NEZFMVx1NjA2Rlx1RkYxQSIuY29uY2F0KF9jb250ZXh0LnQwLmRhdGEgfHwgJ+acquefpemUmeivrycpLCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5Yig6Zmk5aSx6LSlJywKICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RobotListItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,cAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,MAAA,GAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,SAAA,IAAA,EAAA,GAAA,cAAA,GAAA,aAAA;AACA,KAHA;AAIA,IAAA,oBAJA,kCAIA;AACA,aAAA,KAAA,gBAAA,KAAA,aAAA,GAAA,EAAA,GAAA,OAAA;AACA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,EAAA;AACA,KATA;AAUA,IAAA,mBAVA,iCAUA;AACA,aAAA,KAAA,KAAA,CAAA,SAAA,GAAA,CAAA,GAAA,cAAA,GAAA,KAAA,KAAA,CAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,EAAA;AACA;AAZA,GALA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,KADA,EACA,QADA,EACA;AACA,cAAA,QAAA;AACA,aAAA,KAAA;AACA,iBAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;AACA,aAAA,MAAA;AACA,iBAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;AACA;AACA,iBAAA,KAAA;AANA;AAQA;AAVA,GAnBA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,QAAA,CAAA,aAAA,CAAA,sBAAA,EAAA;AACA,kBAAA,KAAA,EAAA,OADA;AAEA,kBAAA,IAAA,EAAA,IAFA;AAGA,kBAAA,UAAA,EAAA,IAHA;AAIA,kBAAA,SAAA,EAAA,QAJA;AAKA,kBAAA,OAAA,EAAA,IALA;AAMA,kBAAA,WAAA,EAAA,IANA;AAOA,kBAAA,WAAA,EAAA,KAPA;AAQA,kBAAA,eAAA,EAAA,KARA;AASA,kBAAA,QAAA,EAAA;AATA,iBAAA,CADA;;AAAA;AACA,gBAAA,OADA;;AAAA,oBAYA,OAZA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAgBA,cAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAhBA;;AAAA;AAiBA,gBAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AAjBA;AAAA;;AAAA;AAAA;AAAA;;AAmBA,gBAAA,KAAA,CAAA,QAAA,CAAA,KAAA,qGAAA,YAAA,IAAA,IAAA,MAAA,GAAA;AACA,kBAAA,KAAA,EAAA,MADA;AAEA,kBAAA,aAAA,EAAA,IAFA;AAGA,kBAAA,OAAA,EAAA,qBAHA;AAIA,kBAAA,OAAA,EAAA,QAJA;AAKA,kBAAA,WAAA,EAAA;AALA,iBAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AA5BA;AA/BA,CAAA","sourcesContent":["<template>\n    <b-card class=\"mb-4 card\">\n        <div class=\"d-flex align-items-center\">\n            <span :class=\"['mr-1', 'd-inline-flex', robotStatusClass]\">\n                <b-icon icon=\"circle-fill\" font-scale=\"0.6\" :animation=\"robotStatusAnimation\"></b-icon>\n            </span>\n            <router-link :to=\"{ name: 'robot', params: { id: robot.robotId } }\" class=\"font-weight-bold text-body\">\n                <span class=\"mr-2\">{{ robot.name }}</span>\n                <span class=\"text-muted font-weight-light\">{{ robot.exchangeNameZh }} {{ robot.pair }}</span>\n            </router-link>\n            <span class=\"ml-auto action-buttons\">\n                <router-link :to=\"{ name: 'robot-update', params: { id: robot.robotId } }\" class=\"mr-2\">\n                    <b-icon-pencil-square></b-icon-pencil-square>\n                </router-link>\n                <a href=\"#\" class=\"text-danger\" @click=\"showMsgBox\">\n                    <b-icon-trash></b-icon-trash>\n                </a>\n            </span>\n        </div>\n        <div class=\"d-flex justify-content-between mt-2\">\n            <span>\n                <span class=\"small text-muted\">收益率</span><br />\n                <span :class=\"[profitColorClass, 'h6']\">{{ robot.profitRatioPtg }}</span></span\n            >\n            <span>\n                <span class=\"small text-muted\">收益额({{ robot.targetCurrency }})</span><br />\n                <span :class=\"profitColorClass\">\n                    <small>{{ robot.profit | roundByCurrency(robot.targetCurrency) }}</small>\n                </span></span\n            >\n            <span>\n                <span class=\"small text-muted\">本金({{ robot.targetCurrency }})</span><br />\n                <span class=\"\">\n                    <small> {{ robot.principal | roundByCurrency(robot.targetCurrency) }}</small>\n                </span>\n            </span>\n            <span>\n                <span class=\"small text-muted\">余额({{ robot.targetCurrency }})</span><br /><span class=\"\">\n                    <small>{{ robot.balance | roundByCurrency(robot.targetCurrency) }}</small>\n                </span>\n            </span>\n        </div>\n        <!-- <div class=\"text-muted mt-2\">\n            <span class=\"mr-2\">{{ robot.exchangeNameZh }}</span>\n            <span>{{ robot.pair }}</span>\n            <span class=\"float-right\">{{ robot.durationDisplay }}</span>\n        </div> -->\n        <hr />\n        <div class=\"small d-flex justify-content-between\">\n            <div class=\"d-inline-block\">\n                <span class=\"mr-1 text-muted\">较前日</span>\n                <span :class=\"[profit24hColorClass, 'mr-1']\">\n                    <b-icon-caret-up-fill v-if=\"robot.profit24h > 0\"></b-icon-caret-up-fill>\n                    <b-icon-caret-down-fill v-if=\"robot.profit24h < 0\"></b-icon-caret-down-fill>\n                    {{ robot.profitRatioPtg24h }}\n                </span>\n                <span :class=\"profit24hColorClass\">\n                    {{ robot.profit24h | roundByCurrency(robot.targetCurrency) }}\n                    <span class=\"font-weight-light\"> {{ robot.targetCurrency }}</span>\n                </span>\n            </div>\n            <div class=\"d-inline-block\">\n                <b-icon icon=\"graph-up\" class=\"mr-1\"></b-icon>\n                <span class=\"\"> {{ robot.strategyName }} </span>\n                <span class=\"text-muted\"> {{ robot.durationDisplay }} </span>\n            </div>\n        </div>\n    </b-card>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { deleteRobotsId } from '../api';\n\nexport default {\n    name: 'RobotListItem',\n    props: {\n        robot: Object,\n    },\n    computed: {\n        robotStatusClass() {\n            return moment().diff(this.robot.pingTime, 'seconds') < 60 ? 'text-success' : 'text-danger';\n        },\n        robotStatusAnimation() {\n            return this.robotStatusClass === 'text-danger' ? '' : 'throb';\n        },\n        profitColorClass() {\n            return this.robot.profit > 0 ? 'text-success' : this.robot.profit < 0 ? 'text-danger' : '';\n        },\n        profit24hColorClass() {\n            return this.robot.profit24h > 0 ? 'text-success' : this.robot.profit24h < 0 ? 'text-danger' : '';\n        },\n    },\n    filters: {\n        roundByCurrency(value, currency) {\n            switch (currency) {\n                case 'BTC':\n                    return value.toFixed(4);\n                case 'USDT':\n                    return value.toFixed(2);\n                default:\n                    return value;\n            }\n        },\n    },\n    methods: {\n        async showMsgBox() {\n            const confirm = await this.$bvModal.msgBoxConfirm('删除机器人将同时删除其所有资产统计数据。', {\n                title: '确认删除？',\n                size: 'sm',\n                buttonSize: 'sm',\n                okVariant: 'danger',\n                okTitle: '确认',\n                cancelTitle: '取消',\n                footerClass: 'p-2',\n                hideHeaderClose: false,\n                centered: true,\n            });\n            if (!confirm) {\n                return;\n            }\n            try {\n                await deleteRobotsId(this.robot.robotId);\n                this.$emit('refresh');\n            } catch (error) {\n                this.$bvToast.toast(`无法删除机器人数据，错误信息：${error.data || '未知错误'}`, {\n                    title: '删除失败',\n                    autoHideDelay: 3000,\n                    toaster: 'b-toaster-top-right',\n                    variant: 'danger',\n                    appendToast: false,\n                });\n            }\n        },\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n    margin: 40px 0 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    display: inline-block;\n    margin: 0 10px;\n}\n\na {\n    color: #42b983;\n}\n\n.action-buttons {\n    display: none;\n}\n\n.card:hover .action-buttons {\n    display: inline-block;\n}\n</style>\n"],"sourceRoot":"src/components"}]}