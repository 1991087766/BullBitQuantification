{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/components/RobotUpdateForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/components/RobotUpdateForm.vue","mtime":1619057276517},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXZ5eHUvUHljaGFybVByb2plY3RzL294L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xMy4xN0BAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25hdnl4dS9QeWNoYXJtUHJvamVjdHMvb3gvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL19AYmFiZWxfcnVudGltZUA3LjEzLjE3QEBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRSb2JvdHNJZCBhcyBfZ2V0Um9ib3RzSWQsIHBhdGNoUm9ib3RzSWQgfSBmcm9tICcuLi9hcGknOwppbXBvcnQgZm9ybWF0dGVyTWl4aW4gZnJvbSAnQC9taXhpbnMvZm9ybWF0dGVyJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSb2JvdFVwZGF0ZUZvcm0nLAogIG1peGluczogW2Zvcm1hdHRlck1peGluXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybTogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGVuYWJsZTogZmFsc2UsCiAgICAgICAgc3RyYXRlZ3lUZW1wbGF0ZTogbnVsbAogICAgICB9LAogICAgICBzdHJhdGVneVRlbXBsYXRlT3B0aW9uczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcm9ib3RJZDogZnVuY3Rpb24gcm9ib3RJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdChldnQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBuYW1lOiB0aGlzLmZvcm0ubmFtZSwKICAgICAgICBlbmFibGU6IHRoaXMuZm9ybS5lbmFibGUKICAgICAgfTsKICAgICAgcGF0Y2hSb2JvdHNJZCh0aGlzLnJvYm90SWQsIHRoaXMuZm9ybWF0dGVyLnNlcmlhbGl6ZShfb2JqZWN0U3ByZWFkKHsKICAgICAgICB0eXBlOiAncm9ib3RzJywKICAgICAgICBpZDogdGhpcy5yb2JvdElkCiAgICAgIH0sIGRhdGEpKSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCIvcm9ib3QvIi5jb25jYXQoX3RoaXMucm9ib3RJZCkpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyLmRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0Um9ib3RGb3JtOiBmdW5jdGlvbiBpbml0Um9ib3RGb3JtKGRhdGEpIHsKICAgICAgdGhpcy5mb3JtID0gewogICAgICAgIG5hbWU6IGRhdGEubmFtZSwKICAgICAgICBlbmFibGVkOiBkYXRhLmVuYWJsZWQKICAgICAgfTsKICAgIH0sCiAgICBnZXRSb2JvdHNJZDogZnVuY3Rpb24gZ2V0Um9ib3RzSWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0Um9ib3RzSWQoX3RoaXMyLnJvYm90SWQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgX3RoaXMyLmluaXRSb2JvdEZvcm0oX3RoaXMyLmZvcm1hdHRlci5kZXNlcmlhbGl6ZShyZXNwb25zZS5kYXRhKSk7CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBfdGhpczIuJGJ2VG9hc3QudG9hc3QoIlx1NjVFMFx1NkNENVx1NjZGNFx1NjVCMFx1NjczQVx1NTY2OFx1NEVCQVx1NjU3MFx1NjM2RVx1RkYwQ1x1OTUxOVx1OEJFRlx1NEZFMVx1NjA2Rlx1RkYxQSIuY29uY2F0KF9jb250ZXh0LnQwLmRhdGEgfHwgJ+acquefpemUmeivrycpLCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5pWw5o2u5pu05paw5aSx6LSlJywKICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRSb2JvdHNJZCgpOwogIH0KfTs="},{"version":3,"sources":["RobotUpdateForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,WAAA,IAAA,YAAA,EAAA,aAAA,QAAA,QAAA;AACA,OAAA,cAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,MAAA,EAAA,CAAA,cAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,KAFA;AAGA,QAAA,gBAAA,EAAA;AAHA,OADA;AAMA,MAAA,uBAAA,EAAA;AANA,KAAA;AAQA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,GADA,EACA;AAAA;;AACA,MAAA,GAAA,CAAA,cAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IADA;AAEA,QAAA,MAAA,EAAA,KAAA,IAAA,CAAA;AAFA,OAAA;AAIA,MAAA,aAAA,CAAA,KAAA,OAAA,EAAA,KAAA,SAAA,CAAA,SAAA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,SAAA,IAAA,EAAA,CAAA,CACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,kBAAA,KAAA,CAAA,OAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,OANA;AAOA,KAdA;AAeA,IAAA,aAfA,yBAeA,IAfA,EAeA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,QAAA,OAAA,EAAA,IAAA,CAAA;AAFA,OAAA;AAIA,KApBA;AAsBA,IAAA,WAtBA,yBAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,YAAA,CAAA,MAAA,CAAA,OAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;;AAGA,gBAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA;;AAHA;AAAA;;AAAA;AAAA;AAAA;;AAKA,gBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,qGAAA,YAAA,IAAA,IAAA,MAAA,GAAA;AACA,kBAAA,KAAA,EAAA,QADA;AAEA,kBAAA,aAAA,EAAA,IAFA;AAGA,kBAAA,OAAA,EAAA,qBAHA;AAIA,kBAAA,OAAA,EAAA,QAJA;AAKA,kBAAA,WAAA,EAAA;AALA,iBAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAnCA,GAlBA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,WAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\n  <b-card class=\"mt-2\">\n    <b-form @submit=\"onSubmit\">\n      <b-form-row>\n        <b-col md=\"12\">\n          <label>名字</label>\n        </b-col>\n        <b-col md=\"12\">\n          <b-form-input type=\"text\" v-model=\"form.name\"></b-form-input>\n        </b-col>\n      </b-form-row>\n      <b-form-row class=\"mt-2\">\n        <b-col md=\"12\">\n          <label>启用</label>\n        </b-col>\n        <b-col md=\"12\">\n          <b-form-checkbox id=\"id_enable\" v-model=\"form.enable\" name=\"enable\" value=\"true\" unchecked-value=\"false\">\n          </b-form-checkbox>\n        </b-col>\n      </b-form-row>\n      <b-button block type=\"submit\" variant=\"primary\" class=\"mt-3\">更新</b-button>\n    </b-form>\n  </b-card>\n</template>\n\n<script>\nimport { getRobotsId, patchRobotsId } from '../api';\nimport formatterMixin from '@/mixins/formatter';\n\nexport default {\n  name: 'RobotUpdateForm',\n  mixins: [formatterMixin],\n  data() {\n    return {\n      form: {\n        name: '',\n        enable: false,\n        strategyTemplate: null,\n      },\n      strategyTemplateOptions: [],\n    };\n  },\n  computed: {\n    robotId() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    onSubmit(evt) {\n      evt.preventDefault();\n      let data = {\n        name: this.form.name,\n        enable: this.form.enable,\n      };\n      patchRobotsId(this.robotId, this.formatter.serialize({ type: 'robots', id: this.robotId, ...data }))\n        .then(() => {\n          this.$router.push(`/robot/${this.robotId}`);\n        })\n        .catch(err => {\n          console.log(err.data);\n        });\n    },\n    initRobotForm(data) {\n      this.form = {\n        name: data.name,\n        enabled: data.enabled,\n      };\n    },\n\n    async getRobotsId() {\n      try {\n        const response = await getRobotsId(this.robotId);\n        this.initRobotForm(this.formatter.deserialize(response.data));\n      } catch (err) {\n        this.$bvToast.toast(`无法更新机器人数据，错误信息：${err.data || '未知错误'}`, {\n          title: '数据更新失败',\n          autoHideDelay: 3000,\n          toaster: 'b-toaster-top-right',\n          variant: 'danger',\n          appendToast: false,\n        });\n      }\n    },\n  },\n  mounted() {\n    this.getRobotsId();\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}