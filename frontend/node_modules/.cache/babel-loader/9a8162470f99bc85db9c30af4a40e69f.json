{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotCreateView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotCreateView.vue","mtime":1619057276519},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXZ5eHUvUHljaGFybVByb2plY3RzL294L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xMy4xN0BAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFJvYm90Rm9ybSBmcm9tICIuLi9jb21wb25lbnRzL1JvYm90Rm9ybSI7CmltcG9ydCB7IGdldENyZWRlbnRpYWxzLCBnZXRTdHJhdGVnaWVzIH0gZnJvbSAiQC9hcGkiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNyZWRlbnRpYWxPcHRpb25zOiBbXSwKICAgICAgc3RyYXRlZ3lPcHRpb25zOiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFJvYm90Rm9ybTogUm9ib3RGb3JtCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRDcmVkZW50aWFsT3B0aW9uczogZnVuY3Rpb24gZ2V0Q3JlZGVudGlhbE9wdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjcmVkZW50aWFsc1JlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldENyZWRlbnRpYWxzKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxzUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmNyZWRlbnRpYWxPcHRpb25zID0gY3JlZGVudGlhbHNSZXMuZGF0YS5tYXAoZnVuY3Rpb24gKGNyZWQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY3JlZC5pZCwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiIi5jb25jYXQoY3JlZC5leGNoYW5nZS5uYW1lLCAiIC0gIikuY29uY2F0KGNyZWQubm90ZSkKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBpZiAoX2NvbnRleHQudDAucmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJGJ2VG9hc3QudG9hc3QoJ+aXoOazleiOt+WPluS6pOaYk+aJgOWHreaNricsIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluS6pOaYk+aJgOWHreaNricsCiAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLiRidlRvYXN0LnRvYXN0KF9jb250ZXh0LnQwLm1lc3NhZ2UsIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluS6pOaYk+aJgOWHreaNricsCiAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0U3RyYXRlZ3lPcHRpb25zOiBmdW5jdGlvbiBnZXRTdHJhdGVneU9wdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHN0cmF0ZWdpZXNSZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRTdHJhdGVnaWVzKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHN0cmF0ZWdpZXNSZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5zdHJhdGVneU9wdGlvbnMgPSBzdHJhdGVnaWVzUmVzLmRhdGEucmVzdWx0cy5tYXAoZnVuY3Rpb24gKHMpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcy5pZCwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzLm5hbWUKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgICAgaWYgKF9jb250ZXh0Mi50MC5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuJGJ2VG9hc3QudG9hc3QoJ+aXoOazleiOt+WPluetlueVpeWIl+ihqOaVsOaNricsIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluetlueVpeWIl+ihqOaVsOaNricsCiAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi4kYnZUb2FzdC50b2FzdChfY29udGV4dDIudDAubWVzc2FnZSwgewogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5peg5rOV6I635Y+W562W55Wl5YiX6KGo5pWw5o2uJywKICAgICAgICAgICAgICAgICAgICBhdXRvSGlkZURlbGF5OiAzMDAwLAogICAgICAgICAgICAgICAgICAgIHRvYXN0ZXI6ICdiLXRvYXN0ZXItdG9wLWNlbnRlcicsCiAgICAgICAgICAgICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmdldENyZWRlbnRpYWxPcHRpb25zKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczMuZ2V0U3RyYXRlZ3lPcHRpb25zKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["RobotCreateView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-container fluid=\"\">\n    <robot-form\n        :credential-options=\"credentialOptions\"\n        :strategy-options=\"strategyOptions\">\n    </robot-form>\n  </b-container>\n</template>\n\n<script>\nimport RobotForm from \"../components/RobotForm\";\nimport {getCredentials, getStrategies} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      credentialOptions: [],\n      strategyOptions: [],\n    }\n  },\n  components: {\n    RobotForm,\n  },\n  methods: {\n    async getCredentialOptions() {\n      try {\n        const credentialsRes = await getCredentials()\n        this.credentialOptions = credentialsRes.data.map(cred => ({\n          value: cred.id,\n          text: `${cred.exchange.name} - ${cred.note}`\n        }))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取交易所凭据', {\n            title: '无法获取交易所凭据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取交易所凭据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async getStrategyOptions() {\n      try {\n        const strategiesRes = await getStrategies()\n        this.strategyOptions = strategiesRes.data.results.map(s => ({value: s.id, text: s.name}))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取策略列表数据', {\n            title: '无法获取策略列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取策略列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n  },\n  async mounted() {\n    await this.getCredentialOptions()\n    await this.getStrategyOptions()\n  },\n}\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src/views"}]}