{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotListView.vue","mtime":1619057276519},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXZ5eHUvUHljaGFybVByb2plY3RzL294L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xMy4xN0BAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFJvYm90TGlzdEl0ZW0gZnJvbSAnLi4vY29tcG9uZW50cy9Sb2JvdExpc3RJdGVtJzsKaW1wb3J0IHsgZ2V0Um9ib3RzIH0gZnJvbSAnQC9hcGknOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3JvYm90LWxpc3QnLAogIGNvbXBvbmVudHM6IHsKICAgIFJvYm90TGlzdEl0ZW06IFJvYm90TGlzdEl0ZW0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByb2JvdExpc3Q6IFtdLAogICAgICB0aW1lcjogJycgLy8g5a6a5pe25ZmoaWQKCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVmcmVzaExpc3Q6IGZ1bmN0aW9uIHJlZnJlc2hMaXN0KCkgewogICAgICB0aGlzLmdldFJvYm90TGlzdCgpOwogICAgfSwKICAgIHNldFJvYm90TGlzdDogZnVuY3Rpb24gc2V0Um9ib3RMaXN0KGRhdGEpIHsKICAgICAgdGhpcy5yb2JvdExpc3QgPSBkYXRhLm1hcChmdW5jdGlvbiAocm9ib3QpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgcm9ib3RJZDogcm9ib3QuaWQsCiAgICAgICAgICBuYW1lOiByb2JvdC5uYW1lLAogICAgICAgICAgcGFpcjogcm9ib3QucGFpciwKICAgICAgICAgIHRhcmdldEN1cnJlbmN5OiByb2JvdC50YXJnZXRfY3VycmVuY3ksCiAgICAgICAgICBlbmFibGVkOiByb2JvdC5lbmFibGVkLAogICAgICAgICAgc3RhcnRUaW1lOiByb2JvdFsnc3RhcnRfdGltZSddLAogICAgICAgICAgcGluZ1RpbWU6IHJvYm90WydwaW5nX3RpbWUnXSwKICAgICAgICAgIGNyZWF0ZWRBdDogcm9ib3RbJ2NyZWF0ZWRfYXQnXSwKICAgICAgICAgIGR1cmF0aW9uRGlzcGxheTogcm9ib3RbJ2R1cmF0aW9uX2Rpc3BsYXknXSwKICAgICAgICAgIHN0cmF0ZWd5TmFtZTogcm9ib3RbJ3N0cmF0ZWd5X25hbWUnXSwKICAgICAgICAgIGV4Y2hhbmdlTmFtZVpoOiByb2JvdFsnZXhjaGFuZ2UnXVsnbmFtZV96aCddLAogICAgICAgICAgZXhjaGFuZ2VOYW1lOiByb2JvdC5leGNoYW5nZS5uYW1lLAogICAgICAgICAgcHJvZml0UmF0aW9QdGc6IHJvYm90Wydhc3NldF9yZWNvcmQnXVsndG90YWxfcG5sX3JlbF9wdGcnXSwKICAgICAgICAgIHByb2ZpdFJhdGlvUHRnMjRoOiByb2JvdFsnYXNzZXRfcmVjb3JkJ11bJ3RvdGFsX3BubF9yZWxfcHRnXzI0aCddLAogICAgICAgICAgcHJvZml0MjRoOiByb2JvdFsnYXNzZXRfcmVjb3JkJ11bJ3RvdGFsX3BubF9hYnNfMjRoJ10sCiAgICAgICAgICBwcm9maXQ6IHJvYm90Wydhc3NldF9yZWNvcmQnXVsndG90YWxfcG5sX2FicyddLAogICAgICAgICAgcHJpbmNpcGFsOiByb2JvdFsnYXNzZXRfcmVjb3JkJ11bJ3RvdGFsX3ByaW5jaXBhbCddLAogICAgICAgICAgYmFsYW5jZTogcm9ib3RbJ2Fzc2V0X3JlY29yZCddWyd0b3RhbF9iYWxhbmNlJ10KICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBnZXRSb2JvdExpc3Q6IGZ1bmN0aW9uIGdldFJvYm90TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJvYm90c1JlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldFJvYm90cygpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByb2JvdHNSZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIF90aGlzLnNldFJvYm90TGlzdChyb2JvdHNSZXMuZGF0YSk7CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBpZiAoX2NvbnRleHQudDAucmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJGJ2VG9hc3QudG9hc3QoJ+aXoOazleiOt+WPluacuuWZqOS6uuWIl+ihqOaVsOaNricsIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluacuuWZqOS6uuWIl+ihqOaVsOaNricsCiAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLiRidlRvYXN0LnRvYXN0KF9jb250ZXh0LnQwLm1lc3NhZ2UsIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluacuuWZqOS6uuWIl+ihqOaVsOaNricsCiAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSgpIHsKICAgICAgdmFyIGhpZGRlbiA9IGRvY3VtZW50LmhpZGRlbjsKCiAgICAgIGlmIChoaWRkZW4pIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLnRpbWVyKSB7CiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKHRoaXMuZ2V0Um9ib3RMaXN0LCAxMCAqIDEwMDApOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRSb2JvdExpc3QoKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLmdldFJvYm90TGlzdCwgMTAgKiAxMDAwKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgdGhpcy5oYW5kbGVWaXNpYmlsaXR5Q2hhbmdlLCBmYWxzZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICB9Cn07"},{"version":3,"sources":["RobotListView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"robot-list-view\">\n    <div class=\"ml-3 mb-3\">\n      <router-link :to=\"{name: 'robot-create'}\">\n        <b-button variant=\"primary\">\n          <b-icon icon=\"plus\" aria-hidden=\"true\"></b-icon>\n          创建机器人\n        </b-button>\n      </router-link>\n    </div>\n    <b-row>\n      <b-col lg=\"4\" md=\"6\" sm=\"12\" v-for=\"robot in robotList\" :key=\"robot.robotId\">\n        <robot-list-item :robot=\"robot\" @refresh=\"refreshList\"></robot-list-item>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport RobotListItem from '../components/RobotListItem';\nimport {getRobots} from '@/api';\n\nexport default {\n  name: 'robot-list',\n  components: {\n    RobotListItem,\n  },\n  data() {\n    return {\n      robotList: [],\n      timer: '', // 定时器id\n    };\n  },\n  methods: {\n    refreshList() {\n      this.getRobotList();\n    },\n    setRobotList(data) {\n      this.robotList = data.map(robot => ({\n        robotId: robot.id,\n        name: robot.name,\n        pair: robot.pair,\n        targetCurrency: robot.target_currency,\n        enabled: robot.enabled,\n        startTime: robot['start_time'],\n        pingTime: robot['ping_time'],\n        createdAt: robot['created_at'],\n        durationDisplay: robot['duration_display'],\n        strategyName: robot['strategy_name'],\n        exchangeNameZh: robot['exchange']['name_zh'],\n        exchangeName: robot.exchange.name,\n        profitRatioPtg: robot['asset_record']['total_pnl_rel_ptg'],\n        profitRatioPtg24h: robot['asset_record']['total_pnl_rel_ptg_24h'],\n        profit24h: robot['asset_record']['total_pnl_abs_24h'],\n        profit: robot['asset_record']['total_pnl_abs'],\n        principal: robot['asset_record']['total_principal'],\n        balance: robot['asset_record']['total_balance'],\n      }));\n    },\n    async getRobotList() {\n      try {\n        const robotsRes = await getRobots();\n        this.setRobotList(robotsRes.data);\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取机器人列表数据', {\n            title: '无法获取机器人列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false,\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取机器人列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false,\n          });\n        }\n      }\n    },\n    handleVisibilityChange() {\n      const hidden = document.hidden;\n      if (hidden) {\n        clearInterval(this.timer);\n      } else {\n        if (this.timer) {\n          clearInterval(this.timer);\n        }\n        this.timer = setInterval(this.getRobotList, 10 * 1000);\n      }\n    },\n  },\n  mounted() {\n    this.getRobotList();\n    this.timer = setInterval(this.getRobotList, 10 * 1000);\n    window.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.robot-list-view {\n  width: 100%;\n\n  .row {\n    margin: 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}