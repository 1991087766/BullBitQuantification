{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotListView.vue?vue&type=style&index=0&id=2707aea3&scoped=true&lang=scss&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotListView.vue","mtime":1619057276519},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucm9ib3QtbGlzdC12aWV3IHsKICB3aWR0aDogMTAwJTsKCiAgLnJvdyB7CiAgICBtYXJnaW46IDA7CiAgfQp9Cg=="},{"version":3,"sources":["RobotListView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;;AAEA;AACA;AACA;AACA","file":"RobotListView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"robot-list-view\">\n    <div class=\"ml-3 mb-3\">\n      <router-link :to=\"{name: 'robot-create'}\">\n        <b-button variant=\"primary\">\n          <b-icon icon=\"plus\" aria-hidden=\"true\"></b-icon>\n          创建机器人\n        </b-button>\n      </router-link>\n    </div>\n    <b-row>\n      <b-col lg=\"4\" md=\"6\" sm=\"12\" v-for=\"robot in robotList\" :key=\"robot.robotId\">\n        <robot-list-item :robot=\"robot\" @refresh=\"refreshList\"></robot-list-item>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport RobotListItem from '../components/RobotListItem';\nimport {getRobots} from '@/api';\n\nexport default {\n  name: 'robot-list',\n  components: {\n    RobotListItem,\n  },\n  data() {\n    return {\n      robotList: [],\n      timer: '', // 定时器id\n    };\n  },\n  methods: {\n    refreshList() {\n      this.getRobotList();\n    },\n    setRobotList(data) {\n      this.robotList = data.map(robot => ({\n        robotId: robot.id,\n        name: robot.name,\n        pair: robot.pair,\n        targetCurrency: robot.target_currency,\n        enabled: robot.enabled,\n        startTime: robot['start_time'],\n        pingTime: robot['ping_time'],\n        createdAt: robot['created_at'],\n        durationDisplay: robot['duration_display'],\n        strategyName: robot['strategy_name'],\n        exchangeNameZh: robot['exchange']['name_zh'],\n        exchangeName: robot.exchange.name,\n        profitRatioPtg: robot['asset_record']['total_pnl_rel_ptg'],\n        profitRatioPtg24h: robot['asset_record']['total_pnl_rel_ptg_24h'],\n        profit24h: robot['asset_record']['total_pnl_abs_24h'],\n        profit: robot['asset_record']['total_pnl_abs'],\n        principal: robot['asset_record']['total_principal'],\n        balance: robot['asset_record']['total_balance'],\n      }));\n    },\n    async getRobotList() {\n      try {\n        const robotsRes = await getRobots();\n        this.setRobotList(robotsRes.data);\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取机器人列表数据', {\n            title: '无法获取机器人列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false,\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取机器人列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false,\n          });\n        }\n      }\n    },\n    handleVisibilityChange() {\n      const hidden = document.hidden;\n      if (hidden) {\n        clearInterval(this.timer);\n      } else {\n        if (this.timer) {\n          clearInterval(this.timer);\n        }\n        this.timer = setInterval(this.getRobotList, 10 * 1000);\n      }\n    },\n  },\n  mounted() {\n    this.getRobotList();\n    this.timer = setInterval(this.getRobotList, 10 * 1000);\n    window.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.robot-list-view {\n  width: 100%;\n\n  .row {\n    margin: 0;\n  }\n}\n</style>\n"]}]}