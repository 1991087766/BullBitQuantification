{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotView.vue","mtime":1619057276520},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RobotView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"RobotView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <b-row class=\"m-1\">\n        <b-col md=\"8\">\n            <log-panel :logList=\"logList\" />\n            <b-card no-body class=\"mt-3\">\n                <b-tabs card>\n                    <b-tab title=\"持有仓位\" active>\n                        <position :position-store=\"positionStore\"></position>\n                    </b-tab>\n                    <b-tab title=\"当前委托\">\n                        <order :order-store=\"orderStore\"></order>\n                    </b-tab>\n                </b-tabs>\n            </b-card>\n            <!--      <asset-chart/>-->\n        </b-col>\n        <b-col md=\"4\">\n            <overview :overview-data=\"overviewData\" />\n            <b-card header-tag=\"header\" class=\"mt-3\">\n                <template v-slot:header>\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                        <span class=\"h6\">参数预览</span>\n                        <a href=\"#\" v-b-modal.param-form-modal>\n                            <b-icon-pencil-square></b-icon-pencil-square>\n                        </a>\n                    </div>\n                </template>\n                <param-preview :parameters=\"strategySpecView && strategySpecView.parameters\"></param-preview>\n            </b-card>\n        </b-col>\n        <b-modal button-size=\"sm\" size=\"md\" id=\"param-form-modal\" scrollable centered title=\"参数设置\">\n            <param-form ref=\"paramForm\" :fields=\"strategySpecView && strategySpecView.parameters\"></param-form>\n            <template v-slot:modal-footer=\"{ ok }\">\n                <b-button size=\"sm\" variant=\"primary\" @click=\"onSubmit(ok, $event)\">确认</b-button>\n            </template>\n        </b-modal>\n    </b-row>\n</template>\n\n<script>\nimport LogPanel from '@/components/robot-console/LogPanel';\nimport ParamPreview from '../components/ParamPreview';\nimport ParamForm from '../components/ParamForm';\nimport Position from '../components/robot-console/Position';\n// import AssetChart from '../components/robot-console/AssetChart';\nimport Overview from '../components/robot-console/Overview';\nimport Order from '@/components/robot-console/Order';\nimport { getRobotsId } from '@/api';\nimport { getRobotStrategySpecView, updateRobotStrategyParameters } from '@/api/robot';\nimport { mapState } from 'vuex';\n\nexport default {\n    name: 'RobotView',\n    data() {\n        return {\n            logList: [],\n            robotId: null,\n            strategySpecView: null,\n            overviewData: null,\n            positionStore: null,\n            orderStore: null,\n        };\n    },\n    computed: {\n        ...mapState(['authToken']),\n    },\n\n    components: {\n        LogPanel,\n        ParamPreview,\n        ParamForm,\n        Overview,\n        Position,\n        Order,\n        // AssetChart,\n    },\n    async mounted() {\n        await this.getRobot();\n        await this.getStrategySpecView();\n        this.initWebsocket();\n    },\n    beforeDestroy() {\n        if (this.ws) {\n            this._send({\n                cmd: 'unsub',\n                topics: [`robot#${this.robotId}.log`, `robot#${this.robotId}.store`],\n            });\n            const ws = this.ws;\n            this.ws = null;\n            ws.close();\n        }\n    },\n    methods: {\n        initWebsocket() {\n            // 初始化weosocket\n            const wsuri = `${window.conf.websocketApiUri}`; // 这个地址由后端童鞋提供\n            this.ws = new WebSocket(wsuri);\n            this.ws.onmessage = message => {\n                message = JSON.parse(message.data);\n                if (message.ping) {\n                    this._send({\n                        pong: message.ping,\n                    });\n                    return;\n                }\n\n                if (message.code) {\n                    if (message.code === 200) {\n                        this._send({\n                            cmd: 'sub',\n                            topics: [`robot#${this.robotId}.log`, `robot#${this.robotId}.store`],\n                        });\n                        this.logList.push({\n                            timestamp: Date.now(),\n                            level: 'success',\n                            text: '认证成功, 订阅中...',\n                        });\n                    } else if (message.code === 400) {\n                        this.logList.push({\n                            timestamp: Date.now(),\n                            level: 'error',\n                            text: '认证失败',\n                        });\n                    }\n                } else if (message.category === 'robotLog') {\n                    this.logList.push(message.data);\n                } else if (message.category === 'robotPositionStore') {\n                    this.positionStore = message.data;\n                } else if (message.category === 'robotOrderStore') {\n                    this.orderStore = message.data;\n                } else {\n                    console.log(message);\n                }\n            };\n            this.ws.onopen = () => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'INFO',\n                    text: '已建立 websocket 连接, token 认证中...',\n                });\n                this._send({\n                    cmd: 'auth',\n                    auth_token: this.authToken,\n                });\n            };\n            this.ws.onerror = event => {\n                console.log('error event:', event);\n            };\n            this.ws.onclose = () => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'ERROR',\n                    text: 'Websocket 连接已断开！',\n                });\n                if (this.ws) {\n                    this.reconnect();\n                }\n            };\n        },\n        reconnect() {\n            setTimeout(() => {\n                this.logList.push({\n                    timestamp: Date.now(),\n                    level: 'INFO',\n                    text: '正在尝试重新建立 WebSocket 连接...',\n                });\n                this.initWebsocket();\n            }, 5000);\n        },\n\n        _send(message) {\n            this.ws.send(JSON.stringify(message));\n        },\n        async onSubmit(ok, event) {\n            event.preventDefault();\n            let data = this.$refs.paramForm.form;\n            try {\n                await updateRobotStrategyParameters(this.$route.params.id, data);\n                await this.getStrategySpecView();\n                this.$bvModal.hide('param-form-modal');\n            } catch (error) {\n                if (error.response) {\n                    if (error.response.status === 500) {\n                        this.$bvToast.toast(`服务端错误: ${error.response.status}`, {\n                            title: '更新失败',\n                            autoHideDelay: 3000,\n                            toaster: 'b-toaster-top-center',\n                            variant: 'danger',\n                            appendToast: false,\n                        });\n                    } else if (error.response.status === 400) {\n                        // this.paramFormErrors = error.response.data.errors;\n                        // todo\n                    } else {\n                        this.$bvToast.toast(error.message, {\n                            title: '数据获取失败',\n                            autoHideDelay: 3000,\n                            toaster: 'b-toaster-top-center',\n                            variant: 'danger',\n                            appendToast: false,\n                        });\n                    }\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '数据获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n        async getRobot() {\n            try {\n                const robotRes = await getRobotsId(this.$route.params.id);\n                const result = robotRes.data;\n                this.robotId = result.id;\n                this.positionStore = result['position_store'];\n                this.orderStore = result['order_store'];\n                this.overviewData = {\n                    name: result.name,\n                    pair: result.pair,\n                    marketType: result['market_type'],\n                    RobotId: this.robotId,\n                    strategyName: result['strategy_name'],\n                    targetCurrency: result['target_currency'],\n                    baseCurrency: result['base_currency'],\n                    quoteCurrency: result['quote_currency'],\n                    durationDisplay: result['duration_display'],\n                    marketTypeDisplay: result['market_type_display'],\n                    exchangeName: result.exchange.name,\n                    testNet: result['test_net'],\n                    enabled: result.enabled,\n                    totalPrincipal: result['asset_record']['total_principal'],\n                    totalBalance: result['asset_record']['total_balance'],\n                    totalPnlAbs: result['asset_record']['total_pnl_abs'],\n                    totalPnlAbs24h: result['asset_record']['total_pnl_abs_24h'],\n                    totalPnlRelPtg: result['asset_record']['total_pnl_rel_ptg'],\n                    totalPnlRelPtg24h: result['asset_record']['total_pnl_rel_ptg_24h'],\n                };\n            } catch (error) {\n                if (error.response) {\n                    this.$bvToast.toast('获取机器人数据失败', {\n                        title: '获取机器人数据失败',\n                        autoHideDelay: 2000,\n                        toaster: 'b-toaster-top-right',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '获取机器人数据失败',\n                        autoHideDelay: 2000,\n                        toaster: 'b-toaster-top-right',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n        async getStrategySpecView() {\n            try {\n                const response = await getRobotStrategySpecView(this.$route.params.id);\n                this.strategySpecView = response.data;\n            } catch (error) {\n                if (error.response) {\n                    this.$bvToast.toast('策略视图获取失败', {\n                        title: '策略视图获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                } else {\n                    this.$bvToast.toast(error.message, {\n                        title: '策略视图获取失败',\n                        autoHideDelay: 3000,\n                        toaster: 'b-toaster-top-center',\n                        variant: 'danger',\n                        appendToast: false,\n                    });\n                }\n            }\n        },\n    },\n};\n</script>\n\n<style scoped></style>\n"]}]}