{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/components/CredentialForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/components/CredentialForm.vue","mtime":1619057276516},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQge2NyZWF0ZUNyZWRlbnRpYWwsIHVwZGF0ZUNyZWRlbnRpYWx9IGZyb20gIkAvYXBpL2NyZWRlbnRpYWwiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDcmVkZW50aWFsRm9ybSIsCiAgcHJvcHM6IHsKICAgIGZvcm1Jbml0aWFsOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGV4Y2hhbmdlT3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybTogewogICAgICAgIGNyZWRlbnRpYWxJZDogbnVsbCwKICAgICAgICBub3RlOiAnJywKICAgICAgICBhcGlLZXk6ICcnLAogICAgICAgIHNlY3JldDogJycsCiAgICAgICAgcGFzc3BocmFzZTogJycsCiAgICAgICAgZXhjaGFuZ2U6IG51bGwsCiAgICAgICAgdGVzdE5ldDogZmFsc2UsCiAgICAgIH0sCiAgICAgIGZvcm1FcnJvcnM6IHt9LAogICAgICBkaXNhYmxlRXhjaGFuZ2U6IGZhbHNlLAogICAgICBlZGl0aW5nOiBmYWxzZSwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBmb3JtSW5pdGlhbDogZnVuY3Rpb24gKHZhbCkgewogICAgICBpZiAodmFsICE9PSBudWxsKSB7CiAgICAgICAgdGhpcy5yZXNldCgpCiAgICAgICAgdGhpcy5mb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5mb3JtLCB0aGlzLmZvcm1Jbml0aWFsKQogICAgICAgIHRoaXMuZGlzYWJsZUV4Y2hhbmdlID0gdHJ1ZQogICAgICAgIHRoaXMuZWRpdGluZyA9IHRydWUKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXQoKSB7CiAgICAgIHRoaXMuZm9ybSA9IHsKICAgICAgICBjcmVkZW50aWFsSWQ6IG51bGwsCiAgICAgICAgbm90ZTogJycsCiAgICAgICAgYXBpS2V5OiAnJywKICAgICAgICBzZWNyZXQ6ICcnLAogICAgICAgIHBhc3NwaHJhc2U6ICcnLAogICAgICAgIGV4Y2hhbmdlOiBudWxsLAogICAgICAgIHRlc3ROZXQ6IGZhbHNlLAogICAgICB9CiAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlCiAgICAgIHRoaXMuZGlzYWJsZUV4Y2hhbmdlID0gZmFsc2UKICAgICAgdGhpcy5mb3JtRXJyb3JzID0ge30KICAgIH0sCiAgICBhc3luYyBvblN1Ym1pdChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgIGlmICh0aGlzLmZvcm0uY3JlZGVudGlhbElkID09PSBudWxsKSB7CiAgICAgICAgYXdhaXQgdGhpcy5jcmVhdGUoKQogICAgICB9IGVsc2UgewogICAgICAgIGF3YWl0IHRoaXMudXBkYXRlKCkKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGNyZWF0ZSgpIHsKICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgIm5vdGUiOiB0aGlzLmZvcm0ubm90ZSwKICAgICAgICAiYXBpX2tleSI6IHRoaXMuZm9ybS5hcGlLZXksCiAgICAgICAgInNlY3JldCI6IHRoaXMuZm9ybS5zZWNyZXQsCiAgICAgICAgInBhc3NwaHJhc2UiOiB0aGlzLmZvcm0ucGFzc3BocmFzZSwKICAgICAgICAiZXhjaGFuZ2UiOiB0aGlzLmZvcm0uZXhjaGFuZ2UsCiAgICAgICAgInRlc3RfbmV0IjogdGhpcy5mb3JtLnRlc3ROZXQsCiAgICAgIH0KICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBjcmVhdGVDcmVkZW50aWFsKGRhdGEpCiAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdCgn5Lqk5piT5omA5Yet5o2u57uR5a6a5oiQ5YqfJywgewogICAgICAgICAgdGl0bGU6ICfkuqTmmJPmiYDlh63mja7nu5HlrprmiJDlip8nLAogICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgIHRvYXN0ZXI6ICdiLXRvYXN0ZXItdG9wLXJpZ2h0JywKICAgICAgICAgIHZhcmlhbnQ6ICdzdWNjZXNzJywKICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgIH0pOwogICAgICAgIHRoaXMucmVzZXQoKQogICAgICAgIHRoaXMuJGVtaXQoInN1Ym1pdHRlZCIpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHsKICAgICAgICAgICAgLy8gZm9ybSB2YWxpZGF0aW9uIGVycm9yCiAgICAgICAgICAgIHRoaXMuZm9ybUVycm9ycyA9IGVycm9yLnJlc3BvbnNlLmRhdGEKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICB9CiAgICAgICAgICAvLyBvdGhlciBlcnJvcnMKICAgICAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ+S6pOaYk+aJgOWHreaNrue7keWumuWksei0pScsIHsKICAgICAgICAgICAgdGl0bGU6ICfkuqTmmJPmiYDlh63mja7nu5HlrprlpLHotKUnLAogICAgICAgICAgICBhdXRvSGlkZURlbGF5OiAyMDAwLAogICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1yaWdodCcsCiAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICBhcHBlbmRUb2FzdDogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KGVycm9yLm1lc3NhZ2UsIHsKICAgICAgICAgICAgdGl0bGU6ICfkuqTmmJPmiYDlh63mja7nu5HlrprlpLHotKUnLAogICAgICAgICAgICBhdXRvSGlkZURlbGF5OiAyMDAwLAogICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1yaWdodCcsCiAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICBhcHBlbmRUb2FzdDogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIHVwZGF0ZSgpIHsKICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgIm5vdGUiOiB0aGlzLmZvcm0ubm90ZSwKICAgICAgICAiYXBpX2tleSI6IHRoaXMuZm9ybS5hcGlLZXksCiAgICAgICAgInNlY3JldCI6IHRoaXMuZm9ybS5zZWNyZXQsCiAgICAgICAgInBhc3NwaHJhc2UiOiB0aGlzLmZvcm0ucGFzc3BocmFzZSwKICAgICAgICAiZXhjaGFuZ2UiOiB0aGlzLmZvcm0uZXhjaGFuZ2UsCiAgICAgICAgInRlc3RfbmV0IjogdGhpcy5mb3JtLnRlc3ROZXQsCiAgICAgIH0KICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB1cGRhdGVDcmVkZW50aWFsKHRoaXMuZm9ybS5jcmVkZW50aWFsSWQsIGRhdGEpCiAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdCgn5Lqk5piT5omA5Yet5o2u5pu05paw5oiQ5YqfJywgewogICAgICAgICAgdGl0bGU6ICfkuqTmmJPmiYDlh63mja7mm7TmlrDmiJDlip8nLAogICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgIHRvYXN0ZXI6ICdiLXRvYXN0ZXItdG9wLXJpZ2h0JywKICAgICAgICAgIHZhcmlhbnQ6ICdzdWNjZXNzJywKICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgIH0pOwogICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlCiAgICAgICAgdGhpcy5kaXNhYmxlRXhjaGFuZ2UgPSBmYWxzZQogICAgICAgIHRoaXMucmVzZXQoKQogICAgICAgIHRoaXMuJGVtaXQoInN1Ym1pdHRlZCIpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHsKICAgICAgICAgICAgLy8gZm9ybSB2YWxpZGF0aW9uIGVycm9yCiAgICAgICAgICAgIHRoaXMuZm9ybUVycm9ycyA9IGVycm9yLnJlc3BvbnNlLmRhdGEKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCfkuqTmmJPmiYDlh63mja7mm7TmlrDlpLHotKUnLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5Lqk5piT5omA5Yet5o2u5pu05paw5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChlcnJvci5tZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5Lqk5piT5omA5Yet5o2u5pu05paw5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["CredentialForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"CredentialForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-form @submit=\"onSubmit\" class=\"form-row\">\n    <!--  Exchanges  -->\n    <b-col md=\"4\">\n      <b-form-group label=\"交易所:\" label-for=\"id_exchange\">\n        <b-form-select\n            id=\"id_exchange\"\n            v-model=\"form.exchange\"\n            :options=\"exchangeOptions\"\n            required\n            :disabled=\"disableExchange\"\n            :state=\"formErrors.exchange===undefined?null:false\"\n        ></b-form-select>\n        <b-form-invalid-feedback :state=\"formErrors.exchange===undefined?null:false\">\n          {{ formErrors.exchange !== undefined && formErrors.exchange[0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  Note  -->\n    <b-col md=\"4\">\n      <b-form-group\n          label=\"备注:\"\n          label-for=\"id_note\"\n      >\n        <b-form-input\n            id=\"id_note\"\n            v-model=\"form.note\"\n            type=\"text\"\n            required\n            :state=\"formErrors.note===undefined?null:false\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"formErrors.note===undefined?null:false\">\n          {{ formErrors.note !== undefined && formErrors.note[0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  API Key  -->\n    <b-col md=\"4\">\n      <b-form-group label=\"API Key:\" label-for=\"id_api_key\">\n        <b-form-input\n            id=\"id_api_key\"\n            v-model=\"form.apiKey\"\n            required\n            autocomplete=\"new-password\"\n            :state=\"formErrors['api_key']===undefined?null:false\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"formErrors['api_key']===undefined?null:false\">\n          {{ formErrors['api_key'] !== undefined && formErrors['api_key'][0] }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n    </b-col>\n\n    <!--  Secret  -->\n    <b-col md=\"6\">\n      <b-form-group label=\"Secret:\" label-for=\"id_secret\">\n        <b-form-input\n            id=\"id_secret\"\n            v-model=\"form.secret\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n        ></b-form-input>\n      </b-form-group>\n    </b-col>\n\n    <!--  Passphrase  -->\n    <b-col md=\"6\">\n      <b-form-group label=\"Passphrase:\" label-for=\"id_passphrase\">\n        <b-form-input\n            id=\"id_passphrase\"\n            v-model=\"form.passphrase\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n        ></b-form-input>\n      </b-form-group>\n    </b-col>\n\n    <!--  Test net  -->\n    <b-col md=\"12\">\n      <b-form-checkbox\n          id=\"id_test_net\"\n          v-model=\"form.testNet\"\n          name=\"test_net\"\n          value=\"true\"\n          unchecked-value=\"false\"\n      >\n        测试网\n      </b-form-checkbox>\n    </b-col>\n    <b-col class=\"text-center mt-3\">\n      <b-button type=\"submit\" variant=\"primary\" class=\"mr-3\">{{ editing ? \"更新\" : \"绑定\" }}</b-button>\n      <b-button type=\"button\" variant=\"danger\" @click=\"reset\">清空</b-button>\n    </b-col>\n  </b-form>\n</template>\n\n<script>\n\nimport {createCredential, updateCredential} from \"@/api/credential\";\n\nexport default {\n  name: \"CredentialForm\",\n  props: {\n    formInitial: {\n      type: Object,\n      default: null\n    },\n    exchangeOptions: {\n      type: Array,\n      default: () => []\n    },\n  },\n  data() {\n    return {\n      form: {\n        credentialId: null,\n        note: '',\n        apiKey: '',\n        secret: '',\n        passphrase: '',\n        exchange: null,\n        testNet: false,\n      },\n      formErrors: {},\n      disableExchange: false,\n      editing: false,\n    }\n  },\n  watch: {\n    formInitial: function (val) {\n      if (val !== null) {\n        this.reset()\n        this.form = Object.assign({}, this.form, this.formInitial)\n        this.disableExchange = true\n        this.editing = true\n      }\n    }\n  },\n  methods: {\n    reset() {\n      this.form = {\n        credentialId: null,\n        note: '',\n        apiKey: '',\n        secret: '',\n        passphrase: '',\n        exchange: null,\n        testNet: false,\n      }\n      this.editing = false\n      this.disableExchange = false\n      this.formErrors = {}\n    },\n    async onSubmit(event) {\n      event.preventDefault()\n      if (this.form.credentialId === null) {\n        await this.create()\n      } else {\n        await this.update()\n      }\n    },\n    async create() {\n      let data = {\n        \"note\": this.form.note,\n        \"api_key\": this.form.apiKey,\n        \"secret\": this.form.secret,\n        \"passphrase\": this.form.passphrase,\n        \"exchange\": this.form.exchange,\n        \"test_net\": this.form.testNet,\n      }\n      try {\n        await createCredential(data)\n        this.$bvToast.toast('交易所凭据绑定成功', {\n          title: '交易所凭据绑定成功',\n          autoHideDelay: 2000,\n          toaster: 'b-toaster-top-right',\n          variant: 'success',\n          appendToast: false\n        });\n        this.reset()\n        this.$emit(\"submitted\")\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            // form validation error\n            this.formErrors = error.response.data\n            return\n          }\n          // other errors\n          this.$bvToast.toast('交易所凭据绑定失败', {\n            title: '交易所凭据绑定失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '交易所凭据绑定失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async update() {\n      let data = {\n        \"note\": this.form.note,\n        \"api_key\": this.form.apiKey,\n        \"secret\": this.form.secret,\n        \"passphrase\": this.form.passphrase,\n        \"exchange\": this.form.exchange,\n        \"test_net\": this.form.testNet,\n      }\n      try {\n        await updateCredential(this.form.credentialId, data)\n        this.$bvToast.toast('交易所凭据更新成功', {\n          title: '交易所凭据更新成功',\n          autoHideDelay: 2000,\n          toaster: 'b-toaster-top-right',\n          variant: 'success',\n          appendToast: false\n        });\n        this.editing = false\n        this.disableExchange = false\n        this.reset()\n        this.$emit(\"submitted\")\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            // form validation error\n            this.formErrors = error.response.data\n            return\n          }\n          this.$bvToast.toast('交易所凭据更新失败', {\n            title: '交易所凭据更新失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '交易所凭据更新失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n  },\n}\n</script>"]}]}