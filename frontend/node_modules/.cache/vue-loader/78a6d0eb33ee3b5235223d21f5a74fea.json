{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/CredentialView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/CredentialView.vue","mtime":1619057276519},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDcmVkZW50aWFsRm9ybSBmcm9tICJAL2NvbXBvbmVudHMvQ3JlZGVudGlhbEZvcm0iCmltcG9ydCBDcmVkZW50aWFsSGVscGVyIGZyb20gIkAvY29tcG9uZW50cy9DcmVkZW50aWFsSGVscGVyIgppbXBvcnQgQ3JlZGVudGlhbEl0ZW0gZnJvbSAiQC9jb21wb25lbnRzL0NyZWRlbnRpYWxJdGVtIgppbXBvcnQge2dldENyZWRlbnRpYWxzLCBkZWxldGVDcmVkZW50aWFsfSBmcm9tICJAL2FwaS9jcmVkZW50aWFsIgppbXBvcnQge2dldEV4Y2hhbmdlc30gZnJvbSAiQC9hcGkiCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNyZWRlbnRpYWxWaWV3IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3JlZGVudGlhbExpc3Q6IFtdLAogICAgICBleGNoYW5nZU9wdGlvbnM6IFtdLAogICAgICBjcmVkZW50aWFsRm9ybUluaXRpYWw6IG51bGwsCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDcmVkZW50aWFsRm9ybSwKICAgIENyZWRlbnRpYWxJdGVtLAogICAgQ3JlZGVudGlhbEhlbHBlciwKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEV4Y2hhbmdlTGlzdCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBleGNoYW5nZXNSZXMgPSBhd2FpdCBnZXRFeGNoYW5nZXMoKQogICAgICAgIHRoaXMuZXhjaGFuZ2VPcHRpb25zID0gZXhjaGFuZ2VzUmVzLmRhdGEubWFwKGUgPT4gKHt2YWx1ZTogZS5pZCwgdGV4dDogZVsnbmFtZV96aCddfSkpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCfojrflj5blj6/mjqXlhaXkuqTmmJPmiYDliJfooajlpLHotKUnLCB7CiAgICAgICAgICAgIHRpdGxlOiAn6I635Y+W5Y+v5o6l5YWl5Lqk5piT5omA5YiX6KGo5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChlcnJvci5tZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiAn6I635Y+W5Y+v5o6l5YWl5Lqk5piT5omA5YiX6KGo5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBnZXRDcmVkZW50aWFsTGlzdCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBjcmVkZW50aWFsc1JlcyA9IGF3YWl0IGdldENyZWRlbnRpYWxzKCkKICAgICAgICB0aGlzLmNyZWRlbnRpYWxMaXN0ID0gY3JlZGVudGlhbHNSZXMuZGF0YS5tYXAoY3JlZCA9PiAoewogICAgICAgICAgY3JlZElkOiBjcmVkLmlkLAogICAgICAgICAgZXhjaGFuZ2VOYW1lWmg6IGNyZWQuZXhjaGFuZ2VbJ25hbWVfemgnXSwKICAgICAgICAgIGV4Y2hhbmdlSWQ6IGNyZWQuZXhjaGFuZ2UuaWQsCiAgICAgICAgICBub3RlOiBjcmVkLm5vdGUsCiAgICAgICAgICBhcGlLZXk6IGNyZWRbJ2FwaV9rZXknXSwKICAgICAgICAgIHNlY3JldDogY3JlZC5zZWNyZXQsCiAgICAgICAgICBwYXNzcGhyYXNlOiBjcmVkLnBhc3NwaHJhc2UsCiAgICAgICAgICB0ZXN0TmV0OiBjcmVkWyd0ZXN0X25ldCddLAogICAgICAgICAgY3JlYXRlZEF0OiBjcmVkWydjcmVhdGVkX2F0J10sCiAgICAgICAgfSkpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCfojrflj5blt7Lnu5HlrprkuqTmmJPmiYDlh63mja7liJfooajlpLHotKUnLCB7CiAgICAgICAgICAgIHRpdGxlOiAn6I635Y+W5bey57uR5a6a5Lqk5piT5omA5Yet5o2u5YiX6KGo5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChlcnJvci5tZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiAn6I635Y+W5bey57uR5a6a5Lqk5piT5omA5Yet5o2u5YiX6KGo5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBkZWxldGVDcmVkZW50aWFsKHtjcmVkSWR9KSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgZGVsZXRlQ3JlZGVudGlhbChjcmVkSWQpCiAgICAgICAgYXdhaXQgdGhpcy5nZXRDcmVkZW50aWFsTGlzdCgpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCfkuqTmmJPmiYDlh63mja7liKDpmaTlpLHotKUnLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5Lqk5piT5omA5Yet5o2u5Yig6Zmk5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMjAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChlcnJvci5tZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5Lqk5piT5omA5Yet5o2u5Yig6Zmk5aSx6LSlJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtcmlnaHQnLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBoYW5kbGVDcmVkZW50aWFsRm9ybVN1Ym1pdCgpIHsKICAgICAgYXdhaXQgdGhpcy5nZXRDcmVkZW50aWFsTGlzdCgpCiAgICB9LAogICAgc2V0Q3JlZGVudGlhbEZvcm1Jbml0aWFsKHtpbml0aWFsfSkgewogICAgICB0aGlzLmNyZWRlbnRpYWxGb3JtSW5pdGlhbCA9IGluaXRpYWwKICAgIH0KICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CiAgICBhd2FpdCB0aGlzLmdldENyZWRlbnRpYWxMaXN0KCkKICAgIGF3YWl0IHRoaXMuZ2V0RXhjaGFuZ2VMaXN0KCkKICB9LAp9Cg=="},{"version":3,"sources":["CredentialView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CredentialView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mx-3\">\n    <b-card header-tag=\"header\">\n      <template #header>\n        <h6 class=\"mb-0\">绑定交易所凭据</h6>\n      </template>\n      <b-card-text>\n        <b-row class=\"\">\n          <b-col sm=\"12\" md=\"9\">\n            <credential-form :exchange-options=\"exchangeOptions\" :form-initial=\"credentialFormInitial\"\n                             @submitted=\"getCredentialList\"></credential-form>\n          </b-col>\n          <b-col sm=\"12\" md=\"3\">\n            <credential-helper></credential-helper>\n          </b-col>\n        </b-row>\n      </b-card-text>\n    </b-card>\n    <b-row class=\"mt-4\">\n      <b-col sm=\"12\" md=\"6\" lg=\"4\" class=\"mb-3\" v-for=\"credential in credentialList\" :key=\"credential.credId\">\n        <credential-item :credential=\"credential\" @delete-confirmed=\"deleteCredential\"\n                         @edit=\"setCredentialFormInitial\"></credential-item>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport CredentialForm from \"@/components/CredentialForm\"\nimport CredentialHelper from \"@/components/CredentialHelper\"\nimport CredentialItem from \"@/components/CredentialItem\"\nimport {getCredentials, deleteCredential} from \"@/api/credential\"\nimport {getExchanges} from \"@/api\"\n\nexport default {\n  name: \"CredentialView\",\n  data() {\n    return {\n      credentialList: [],\n      exchangeOptions: [],\n      credentialFormInitial: null,\n    }\n  },\n  components: {\n    CredentialForm,\n    CredentialItem,\n    CredentialHelper,\n  },\n  methods: {\n    async getExchangeList() {\n      try {\n        const exchangesRes = await getExchanges()\n        this.exchangeOptions = exchangesRes.data.map(e => ({value: e.id, text: e['name_zh']}))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('获取可接入交易所列表失败', {\n            title: '获取可接入交易所列表失败',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '获取可接入交易所列表失败',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async getCredentialList() {\n      try {\n        const credentialsRes = await getCredentials()\n        this.credentialList = credentialsRes.data.map(cred => ({\n          credId: cred.id,\n          exchangeNameZh: cred.exchange['name_zh'],\n          exchangeId: cred.exchange.id,\n          note: cred.note,\n          apiKey: cred['api_key'],\n          secret: cred.secret,\n          passphrase: cred.passphrase,\n          testNet: cred['test_net'],\n          createdAt: cred['created_at'],\n        }))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('获取已绑定交易所凭据列表失败', {\n            title: '获取已绑定交易所凭据列表失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '获取已绑定交易所凭据列表失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async deleteCredential({credId}) {\n      try {\n        await deleteCredential(credId)\n        await this.getCredentialList()\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('交易所凭据删除失败', {\n            title: '交易所凭据删除失败',\n            autoHideDelay: 2000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '交易所凭据删除失败',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-right',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async handleCredentialFormSubmit() {\n      await this.getCredentialList()\n    },\n    setCredentialFormInitial({initial}) {\n      this.credentialFormInitial = initial\n    }\n  },\n  async mounted() {\n    await this.getCredentialList()\n    await this.getExchangeList()\n  },\n}\n</script>\n\n"]}]}