{"remainingRequest":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotCreateView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/navyxu/PycharmProjects/ox/frontend/src/views/RobotCreateView.vue","mtime":1619057276519},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/navyxu/PycharmProjects/ox/frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSb2JvdEZvcm0gZnJvbSAiLi4vY29tcG9uZW50cy9Sb2JvdEZvcm0iOwppbXBvcnQge2dldENyZWRlbnRpYWxzLCBnZXRTdHJhdGVnaWVzfSBmcm9tICJAL2FwaSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNyZWRlbnRpYWxPcHRpb25zOiBbXSwKICAgICAgc3RyYXRlZ3lPcHRpb25zOiBbXSwKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFJvYm90Rm9ybSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldENyZWRlbnRpYWxPcHRpb25zKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IGNyZWRlbnRpYWxzUmVzID0gYXdhaXQgZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgIHRoaXMuY3JlZGVudGlhbE9wdGlvbnMgPSBjcmVkZW50aWFsc1Jlcy5kYXRhLm1hcChjcmVkID0+ICh7CiAgICAgICAgICB2YWx1ZTogY3JlZC5pZCwKICAgICAgICAgIHRleHQ6IGAke2NyZWQuZXhjaGFuZ2UubmFtZX0gLSAke2NyZWQubm90ZX1gCiAgICAgICAgfSkpCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCfml6Dms5Xojrflj5bkuqTmmJPmiYDlh63mja4nLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5peg5rOV6I635Y+W5Lqk5piT5omA5Yet5o2uJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtY2VudGVyJywKICAgICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoZXJyb3IubWVzc2FnZSwgewogICAgICAgICAgICB0aXRsZTogJ+aXoOazleiOt+WPluS6pOaYk+aJgOWHreaNricsCiAgICAgICAgICAgIGF1dG9IaWRlRGVsYXk6IDMwMDAsCiAgICAgICAgICAgIHRvYXN0ZXI6ICdiLXRvYXN0ZXItdG9wLWNlbnRlcicsCiAgICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgICBhcHBlbmRUb2FzdDogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIGdldFN0cmF0ZWd5T3B0aW9ucygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBzdHJhdGVnaWVzUmVzID0gYXdhaXQgZ2V0U3RyYXRlZ2llcygpCiAgICAgICAgdGhpcy5zdHJhdGVneU9wdGlvbnMgPSBzdHJhdGVnaWVzUmVzLmRhdGEucmVzdWx0cy5tYXAocyA9PiAoe3ZhbHVlOiBzLmlkLCB0ZXh0OiBzLm5hbWV9KSkKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ+aXoOazleiOt+WPluetlueVpeWIl+ihqOaVsOaNricsIHsKICAgICAgICAgICAgdGl0bGU6ICfml6Dms5Xojrflj5bnrZbnlaXliJfooajmlbDmja4nLAogICAgICAgICAgICBhdXRvSGlkZURlbGF5OiAzMDAwLAogICAgICAgICAgICB0b2FzdGVyOiAnYi10b2FzdGVyLXRvcC1jZW50ZXInLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgYXBwZW5kVG9hc3Q6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChlcnJvci5tZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiAn5peg5rOV6I635Y+W562W55Wl5YiX6KGo5pWw5o2uJywKICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgdG9hc3RlcjogJ2ItdG9hc3Rlci10b3AtY2VudGVyJywKICAgICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGF3YWl0IHRoaXMuZ2V0Q3JlZGVudGlhbE9wdGlvbnMoKQogICAgYXdhaXQgdGhpcy5nZXRTdHJhdGVneU9wdGlvbnMoKQogIH0sCn0K"},{"version":3,"sources":["RobotCreateView.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RobotCreateView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid=\"\">\n    <robot-form\n        :credential-options=\"credentialOptions\"\n        :strategy-options=\"strategyOptions\">\n    </robot-form>\n  </b-container>\n</template>\n\n<script>\nimport RobotForm from \"../components/RobotForm\";\nimport {getCredentials, getStrategies} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      credentialOptions: [],\n      strategyOptions: [],\n    }\n  },\n  components: {\n    RobotForm,\n  },\n  methods: {\n    async getCredentialOptions() {\n      try {\n        const credentialsRes = await getCredentials()\n        this.credentialOptions = credentialsRes.data.map(cred => ({\n          value: cred.id,\n          text: `${cred.exchange.name} - ${cred.note}`\n        }))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取交易所凭据', {\n            title: '无法获取交易所凭据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取交易所凭据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n    async getStrategyOptions() {\n      try {\n        const strategiesRes = await getStrategies()\n        this.strategyOptions = strategiesRes.data.results.map(s => ({value: s.id, text: s.name}))\n      } catch (error) {\n        if (error.response) {\n          this.$bvToast.toast('无法获取策略列表数据', {\n            title: '无法获取策略列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        } else {\n          this.$bvToast.toast(error.message, {\n            title: '无法获取策略列表数据',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center',\n            variant: 'danger',\n            appendToast: false\n          });\n        }\n      }\n    },\n  },\n  async mounted() {\n    await this.getCredentialOptions()\n    await this.getStrategyOptions()\n  },\n}\n</script>\n\n<style scoped>\n</style>\n"]}]}